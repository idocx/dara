Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
refinement.visualize().write_html("tutorial_refinement.html")  # output the interactive html file to the disk
refinement.visualize().write_image("tutorial_refinement.png")  # output the png image to the disk
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
Cell [0;32mIn[5], line 2[0m
[1;32m      1[0m refinement[38;5;241m.[39mvisualize()[38;5;241m.[39mwrite_html([38;5;124m"[39m[38;5;124mtutorial_refinement.html[39m[38;5;124m"[39m)  [38;5;66;03m# output the interactive html file to the disk[39;00m
[0;32m----> 2[0m [43mrefinement[49m[38;5;241;43m.[39;49m[43mvisualize[49m[43m([49m[43m)[49m[38;5;241;43m.[39;49m[43mwrite_image[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mtutorial_refinement.png[39;49m[38;5;124;43m"[39;49m[43m)[49m  [38;5;66;03m# output the png image to the disk[39;00m

File [0;32m/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/plotly/basedatatypes.py:3841[0m, in [0;36mBaseFigure.write_image[0;34m(self, *args, **kwargs)[0m
[1;32m   3781[0m [38;5;250m[39m[38;5;124;03m"""[39;00m
[1;32m   3782[0m [38;5;124;03mConvert a figure to a static image and write it to a file or writeable[39;00m
[1;32m   3783[0m [38;5;124;03mobject[39;00m
[0;32m   (...)[0m
[1;32m   3837[0m [38;5;124;03mNone[39;00m
[1;32m   3838[0m [38;5;124;03m"""[39;00m
[1;32m   3839[0m [38;5;28;01mimport[39;00m [38;5;21;01mplotly[39;00m[38;5;21;01m.[39;00m[38;5;21;01mio[39;00m [38;5;28;01mas[39;00m [38;5;21;01mpio[39;00m
[0;32m-> 3841[0m [38;5;28;01mreturn[39;00m [43mpio[49m[38;5;241;43m.[39;49m[43mwrite_image[49m[43m([49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/plotly/io/_kaleido.py:266[0m, in [0;36mwrite_image[0;34m(fig, file, format, scale, width, height, validate, engine)[0m
[1;32m    250[0m             [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[1;32m    251[0m [38;5;250m                [39m[38;5;124;03m"""[39;00m
[1;32m    252[0m [38;5;124;03mCannot infer image type from output path '{file}'.[39;00m
[0;32m   (...)[0m
[1;32m    260[0m                 )
[1;32m    261[0m             )
[1;32m    263[0m     [38;5;66;03m# Request image[39;00m
[1;32m    264[0m     [38;5;66;03m# -------------[39;00m
[1;32m    265[0m     [38;5;66;03m# Do this first so we don't create a file if image conversion fails[39;00m
[0;32m--> 266[0m     img_data [38;5;241m=[39m [43mto_image[49m[43m([49m
[1;32m    267[0m [43m        [49m[43mfig[49m[43m,[49m
[1;32m    268[0m [43m        [49m[38;5;28;43mformat[39;49m[38;5;241;43m=[39;49m[38;5;28;43mformat[39;49m[43m,[49m
[1;32m    269[0m [43m        [49m[43mscale[49m[38;5;241;43m=[39;49m[43mscale[49m[43m,[49m
[1;32m    270[0m [43m        [49m[43mwidth[49m[38;5;241;43m=[39;49m[43mwidth[49m[43m,[49m
[1;32m    271[0m [43m        [49m[43mheight[49m[38;5;241;43m=[39;49m[43mheight[49m[43m,[49m
[1;32m    272[0m [43m        [49m[43mvalidate[49m[38;5;241;43m=[39;49m[43mvalidate[49m[43m,[49m
[1;32m    273[0m [43m        [49m[43mengine[49m[38;5;241;43m=[39;49m[43mengine[49m[43m,[49m
[1;32m    274[0m [43m    [49m[43m)[49m
[1;32m    276[0m     [38;5;66;03m# Open file[39;00m
[1;32m    277[0m     [38;5;66;03m# ---------[39;00m
[1;32m    278[0m     [38;5;28;01mif[39;00m path [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m    279[0m         [38;5;66;03m# We previously failed to make sense of `file` as a pathlib object.[39;00m
[1;32m    280[0m         [38;5;66;03m# Attempt to write to `file` as an open file descriptor.[39;00m

File [0;32m/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/plotly/io/_kaleido.py:132[0m, in [0;36mto_image[0;34m(fig, format, width, height, scale, validate, engine)[0m
[1;32m    130[0m     [38;5;66;03m# Raise informative error message if Kaleido is not installed[39;00m
[1;32m    131[0m     [38;5;28;01mif[39;00m scope [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[0;32m--> 132[0m         [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[1;32m    133[0m [38;5;250m            [39m[38;5;124;03m"""[39;00m
[1;32m    134[0m [38;5;124;03mImage export using the "kaleido" engine requires the kaleido package,[39;00m
[1;32m    135[0m [38;5;124;03mwhich can be installed using pip:[39;00m
[1;32m    136[0m [38;5;124;03m    $ pip install -U kaleido[39;00m
[1;32m    137[0m [38;5;124;03m"""[39;00m
[1;32m    138[0m         )
[1;32m    140[0m     [38;5;66;03m# Validate figure[39;00m
[1;32m    141[0m     [38;5;66;03m# ---------------[39;00m
[1;32m    142[0m     fig_dict [38;5;241m=[39m validate_coerce_fig_to_dict(fig, validate)

[0;31mValueError[0m: 
Image export using the "kaleido" engine requires the kaleido package,
which can be installed using pip:
    $ pip install -U kaleido


